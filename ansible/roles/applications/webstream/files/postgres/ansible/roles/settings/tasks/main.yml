# psql -h 192.168.0.206 -U postgres sandbox
- name: copy files
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - src: 'setup.sql'
      dest: '/root/ansible'
- name: change permission
  file: path=/mnt/docker/postgres mode=0700 owner=postgres group=postgres
- name: update service file
  lineinfile: dest=/usr/lib/systemd/system/postgresql-9.4.service
              regexp='^Environment=PGDATA=.*'
              line='Environment=PGDATA=/mnt/docker/postgres/'
              insertbefore=BOF
              state=present
- name: initialize database
  shell: /usr/pgsql-9.4/bin/postgresql94-setup initdb
- name: postgresql.conf settings
  lineinfile: dest=/mnt/docker/postgres/postgresql.conf
              regexp="{{ item.regexp }}"
              line="{{ item.line }}"
              insertbefore=BOF
              state=present
  with_items:
    - { regexp: '^#?data_directory\s*=', line: "data_directory='/mnt/docker/postgres'" }
    - { regexp: '^#?hba_file\s*=', line: "hba_file='/mnt/docker/postgres/pg_hba.conf'"}
    - { regexp: '^#?ident_file\s*=', line: "ident_file='/mnt/docker/postgres/pg_ident.conf'"}
- name: postgresql.conf settings
  lineinfile: >-
    dest=/mnt/docker/postgres/postgresql.conf
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
    insertbefore=BOF
    state=present
  with_items:
    - { regexp: '#listen_addresses.*', line: "listen_addresses = '*'" }
    - { regexp: '#port.*', line: "port = 5432" }
- name: pg_hba.conf settings
  lineinfile: >-
    dest=/mnt/docker/postgres/pg_hba.conf
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
    insertbefore=BOF
    state=present
  with_items:
    - { regexp: 'host\s+all\s+all\s+127.0.0.1/32\s.+$', line: 'host all all 192.168.0.0/24 md5\nhost all all 172.17.0.0/24 md5' }
    - { regexp: 'local\s+all\s+all\s+peer\s+$', line: 'local all all trust' }
- name: force restart postgres
  shell: /usr/bin/systemctl restart postgresql-9.4
- name: create database
  postgresql_db: name={{ db_name }} state=present
  sudo_user: "{{ postgresql_userid }}"
- name: create user
  postgresql_user: db={{ db_name }} name={{ postgresql_userid }} password={{ postgresql_passwd }} priv=ALL state=present
  sudo_user: "{{ postgresql_userid }}"
- name: initialize table
  command: /usr/bin/psql -d "{{ db_name }}" -U "{{ postgresql_userid }}" -f "/root/ansible/{{ postgresql_sqlfile }}"
