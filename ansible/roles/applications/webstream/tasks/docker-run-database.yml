- name: docker run (database)
  shell: "{{ item.shell }}"
  with_items:
    - { shell: 'docker run -itd --privileged --volumes-from data_mysql --name webstream-mysql docker/mysql /sbin/init' }
    - { shell: 'docker run -itd --privileged --volumes-from data_postgres --name webstream-postgres docker/postgres /sbin/init' }
    - { shell: 'docker run -itd --privileged --volumes-from data_sqlite --name webstream-sqlite docker/sqlite /sbin/init' }
  sudo: yes
- name: copy files
  copy: src="{{ item }}" dest="{{ ansible_env.PWD }}"
  with_items:
    - mysql
    - postgres
    - sqlite
    - webstream
- name: copy ansible files to container (mysql)
  shell: tar -cv * | sudo docker exec -i webstream-mysql tar x -C /root/ansible chdir=mysql/ansible
- name: copy ansible files to container (postgres)
  shell: tar -cv * | sudo docker exec -i webstream-postgres tar x -C /root/ansible chdir=postgres/ansible
- name: copy ansible files to container (sqlite)
  shell: tar -cv * | sudo docker exec -i webstream-sqlite tar x -C /root/ansible chdir=sqlite/ansible
- name: docker provision (database)
  shell: "{{ item.shell }}"
  with_items:
    - { shell: 'docker exec -t webstream-mysql ansible-playbook -i "localhost," /root/ansible/settings.yml' }
    - { shell: 'docker exec -t webstream-postgres ansible-playbook -i "localhost," /root/ansible/settings.yml' }
    - { shell: 'docker exec -t webstream-sqlite ansible-playbook -i "localhost," /root/ansible/settings.yml' }
  sudo: yes
